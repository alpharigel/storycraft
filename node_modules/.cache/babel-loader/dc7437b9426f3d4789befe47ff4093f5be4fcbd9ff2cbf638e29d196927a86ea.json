{"ast":null,"code":"/**\n * Parses the API response into a format usable by the Storybook component\n * This function may need to be adjusted based on the actual API response structure\n */\nexport const parseStoryResponse = data => {\n  // Check if we have the expected data structure\n  if (!data || !data.outputs) {\n    console.error('Unexpected response format:', data);\n    return null;\n  }\n  try {\n    // Extract the story generation data\n    const storyData = data.outputs.story_generation || {};\n\n    // Create pages for introduction, adventure, resolution, and choice\n    const pages = [];\n\n    // Add introduction page\n    if (storyData.introduction_text) {\n      var _data$outputs$Intro_i, _data$outputs$Intro_i2;\n      pages.push({\n        text: storyData.introduction_text,\n        image: ((_data$outputs$Intro_i = data.outputs.Intro_image) === null || _data$outputs$Intro_i === void 0 ? void 0 : (_data$outputs$Intro_i2 = _data$outputs$Intro_i.output) === null || _data$outputs$Intro_i2 === void 0 ? void 0 : _data$outputs$Intro_i2.image_url) || null\n      });\n    }\n\n    // Add adventure page\n    if (storyData.adventure_text) {\n      var _data$outputs$adventu, _data$outputs$adventu2;\n      pages.push({\n        text: storyData.adventure_text,\n        image: ((_data$outputs$adventu = data.outputs.adventure_image) === null || _data$outputs$adventu === void 0 ? void 0 : (_data$outputs$adventu2 = _data$outputs$adventu.output) === null || _data$outputs$adventu2 === void 0 ? void 0 : _data$outputs$adventu2.image_url) || null\n      });\n    }\n\n    // Add resolution page\n    if (storyData.resolution_text) {\n      var _data$outputs$Resolut, _data$outputs$Resolut2;\n      pages.push({\n        text: storyData.resolution_text,\n        image: ((_data$outputs$Resolut = data.outputs.Resolution_image) === null || _data$outputs$Resolut === void 0 ? void 0 : (_data$outputs$Resolut2 = _data$outputs$Resolut.output) === null || _data$outputs$Resolut2 === void 0 ? void 0 : _data$outputs$Resolut2.image_url) || null\n      });\n    }\n\n    // Add choice page if available\n    if (storyData.choice_text) {\n      var _data$outputs$choice_, _data$outputs$choice_2;\n      pages.push({\n        text: storyData.choice_text,\n        image: ((_data$outputs$choice_ = data.outputs.choice_image) === null || _data$outputs$choice_ === void 0 ? void 0 : (_data$outputs$choice_2 = _data$outputs$choice_.output) === null || _data$outputs$choice_2 === void 0 ? void 0 : _data$outputs$choice_2.image_url) || null,\n        options: storyData.options || []\n      });\n    }\n    return {\n      output: {\n        pages,\n        rawResponse: JSON.stringify(data) // Store the raw response for continuation\n      }\n    };\n  } catch (error) {\n    console.error('Error parsing story response:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["parseStoryResponse","data","outputs","console","error","storyData","story_generation","pages","introduction_text","_data$outputs$Intro_i","_data$outputs$Intro_i2","push","text","image","Intro_image","output","image_url","adventure_text","_data$outputs$adventu","_data$outputs$adventu2","adventure_image","resolution_text","_data$outputs$Resolut","_data$outputs$Resolut2","Resolution_image","choice_text","_data$outputs$choice_","_data$outputs$choice_2","choice_image","options","rawResponse","JSON","stringify"],"sources":["/Users/arminforoughi/Documents/storycraft/src/utils/storyParser.js"],"sourcesContent":["/**\n * Parses the API response into a format usable by the Storybook component\n * This function may need to be adjusted based on the actual API response structure\n */\nexport const parseStoryResponse = (data) => {\n  // Check if we have the expected data structure\n  if (!data || !data.outputs) {\n    console.error('Unexpected response format:', data);\n    return null;\n  }\n  \n  try {\n    // Extract the story generation data\n    const storyData = data.outputs.story_generation || {};\n    \n    // Create pages for introduction, adventure, resolution, and choice\n    const pages = [];\n    \n    // Add introduction page\n    if (storyData.introduction_text) {\n      pages.push({\n        text: storyData.introduction_text,\n        image: data.outputs.Intro_image?.output?.image_url || null\n      });\n    }\n    \n    // Add adventure page\n    if (storyData.adventure_text) {\n      pages.push({\n        text: storyData.adventure_text,\n        image: data.outputs.adventure_image?.output?.image_url || null\n      });\n    }\n    \n    // Add resolution page\n    if (storyData.resolution_text) {\n      pages.push({\n        text: storyData.resolution_text,\n        image: data.outputs.Resolution_image?.output?.image_url || null\n      });\n    }\n    \n    // Add choice page if available\n    if (storyData.choice_text) {\n      pages.push({\n        text: storyData.choice_text,\n        image: data.outputs.choice_image?.output?.image_url || null,\n        options: storyData.options || []\n      });\n    }\n    \n    return {\n      output: {\n        pages,\n        rawResponse: JSON.stringify(data) // Store the raw response for continuation\n      }\n    };\n  } catch (error) {\n    console.error('Error parsing story response:', error);\n    return null;\n  }\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAIC,IAAI,IAAK;EAC1C;EACA,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;IAC1BC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEH,IAAI,CAAC;IAClD,OAAO,IAAI;EACb;EAEA,IAAI;IACF;IACA,MAAMI,SAAS,GAAGJ,IAAI,CAACC,OAAO,CAACI,gBAAgB,IAAI,CAAC,CAAC;;IAErD;IACA,MAAMC,KAAK,GAAG,EAAE;;IAEhB;IACA,IAAIF,SAAS,CAACG,iBAAiB,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC/BH,KAAK,CAACI,IAAI,CAAC;QACTC,IAAI,EAAEP,SAAS,CAACG,iBAAiB;QACjCK,KAAK,EAAE,EAAAJ,qBAAA,GAAAR,IAAI,CAACC,OAAO,CAACY,WAAW,cAAAL,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BM,MAAM,cAAAL,sBAAA,uBAAhCA,sBAAA,CAAkCM,SAAS,KAAI;MACxD,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIX,SAAS,CAACY,cAAc,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC5BZ,KAAK,CAACI,IAAI,CAAC;QACTC,IAAI,EAAEP,SAAS,CAACY,cAAc;QAC9BJ,KAAK,EAAE,EAAAK,qBAAA,GAAAjB,IAAI,CAACC,OAAO,CAACkB,eAAe,cAAAF,qBAAA,wBAAAC,sBAAA,GAA5BD,qBAAA,CAA8BH,MAAM,cAAAI,sBAAA,uBAApCA,sBAAA,CAAsCH,SAAS,KAAI;MAC5D,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIX,SAAS,CAACgB,eAAe,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC7BhB,KAAK,CAACI,IAAI,CAAC;QACTC,IAAI,EAAEP,SAAS,CAACgB,eAAe;QAC/BR,KAAK,EAAE,EAAAS,qBAAA,GAAArB,IAAI,CAACC,OAAO,CAACsB,gBAAgB,cAAAF,qBAAA,wBAAAC,sBAAA,GAA7BD,qBAAA,CAA+BP,MAAM,cAAAQ,sBAAA,uBAArCA,sBAAA,CAAuCP,SAAS,KAAI;MAC7D,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIX,SAAS,CAACoB,WAAW,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACzBpB,KAAK,CAACI,IAAI,CAAC;QACTC,IAAI,EAAEP,SAAS,CAACoB,WAAW;QAC3BZ,KAAK,EAAE,EAAAa,qBAAA,GAAAzB,IAAI,CAACC,OAAO,CAAC0B,YAAY,cAAAF,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2BX,MAAM,cAAAY,sBAAA,uBAAjCA,sBAAA,CAAmCX,SAAS,KAAI,IAAI;QAC3Da,OAAO,EAAExB,SAAS,CAACwB,OAAO,IAAI;MAChC,CAAC,CAAC;IACJ;IAEA,OAAO;MACLd,MAAM,EAAE;QACNR,KAAK;QACLuB,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}