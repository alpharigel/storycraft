{"ast":null,"code":"var _jsxFileName = \"/Users/arminforoughi/Documents/storycraft/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport StoryForm from './components/StoryForm';\nimport Storybook from './components/Storybook';\nimport { parseStoryResponse } from './utils/storyParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [story, setStory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const generateStory = async formData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/released-app/03ebb9ea-1fda-493c-86da-597e2801635e/run', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ww-5916h52zF1qi3SxMASUJ1HScxn1LibbpYmewHyfrJBs56tixAjGvR1'\n        },\n        body: JSON.stringify({\n          inputs: {\n            childname: formData.childName,\n            interests: formData.interests,\n            readinglevel: formData.readingLevel\n          },\n          version: \"^3.0\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate story');\n      }\n\n      // Read the response as text\n      const responseText = await response.text();\n\n      // Find the last chunk which contains the complete output\n      const chunks = responseText.split('\\n').filter(chunk => chunk.trim());\n      const lastChunk = chunks[chunks.length - 1];\n\n      // Parse the last chunk as JSON\n      const lastChunkData = JSON.parse(lastChunk);\n\n      // Parse the story data\n      const parsedStory = parseStoryResponse(lastChunkData);\n      setStory(parsedStory);\n    } catch (err) {\n      console.error('Error generating story:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Personalized Storybook Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!story && /*#__PURE__*/_jsxDEV(StoryForm, {\n        onSubmit: generateStory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Generating your storybook... Please wait!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), story && !loading && /*#__PURE__*/_jsxDEV(Storybook, {\n        story: story,\n        onNewStory: () => setStory(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Powered by Wordware AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SBtZv8JACa8BT0nMC1hfKwd4bgc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StoryForm","Storybook","parseStoryResponse","jsxDEV","_jsxDEV","App","_s","story","setStory","loading","setLoading","error","setError","generateStory","formData","response","fetch","method","headers","body","JSON","stringify","inputs","childname","childName","interests","readinglevel","readingLevel","version","ok","Error","responseText","text","chunks","split","filter","chunk","trim","lastChunk","length","lastChunkData","parse","parsedStory","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onNewStory","_c","$RefreshReg$"],"sources":["/Users/arminforoughi/Documents/storycraft/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport StoryForm from './components/StoryForm';\nimport Storybook from './components/Storybook';\nimport { parseStoryResponse } from './utils/storyParser';\n\nfunction App() {\n  const [story, setStory] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const generateStory = async (formData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/released-app/03ebb9ea-1fda-493c-86da-597e2801635e/run', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ww-5916h52zF1qi3SxMASUJ1HScxn1LibbpYmewHyfrJBs56tixAjGvR1'\n        },\n        body: JSON.stringify({\n          inputs: {\n            childname: formData.childName,\n            interests: formData.interests,\n            readinglevel: formData.readingLevel\n          },\n          version: \"^3.0\"\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to generate story');\n      }\n      \n      // Read the response as text\n      const responseText = await response.text();\n      \n      // Find the last chunk which contains the complete output\n      const chunks = responseText.split('\\n').filter(chunk => chunk.trim());\n      const lastChunk = chunks[chunks.length - 1];\n      \n      // Parse the last chunk as JSON\n      const lastChunkData = JSON.parse(lastChunk);\n      \n      // Parse the story data\n      const parsedStory = parseStoryResponse(lastChunkData);\n      setStory(parsedStory);\n    } catch (err) {\n      console.error('Error generating story:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Personalized Storybook Generator</h1>\n      </header>\n      <main>\n        {!story && <StoryForm onSubmit={generateStory} />}\n        {loading && <div className=\"loading\">Generating your storybook... Please wait!</div>}\n        {error && <div className=\"error\">Error: {error}</div>}\n        {story && !loading && <Storybook story={story} onNewStory={() => setStory(null)} />}\n      </main>\n      <footer>\n        <p>Powered by Wordware AI</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}